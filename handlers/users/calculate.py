from aiogram.types import Message
from aiogram.dispatcher.filters.builtin import  Text
from loader import dp
from states.calculate import *
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.dispatcher import FSMContext
from utils import slp_take_price, get_user_info

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def keyboards_menu(id):
    menu = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    average_earnings = KeyboardButton(text='‚ùî –°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å')
    slp_to_rub = KeyboardButton(text=f'üí≤ {get_user_info(id)[0][5]}% SLP –≤ {get_user_info(id)[0][4]}')
    back = KeyboardButton(text='–í –º–µ–Ω—é ')
    menu.add(slp_to_rub)
    menu.add(average_earnings)
    menu.add(back)
    return menu

# –ú–µ–Ω—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
@dp.message_handler(Text(startswith=f'–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä'), state=None)
async def take_number(message: Message):

    await message.answer('''–ß—Ç–æ –±—É–¥–µ–º –≤—ã—á–∏—Å–ª—è—Ç—å?''', reply_markup=keyboards_menu(message.from_user.id))

# –†–∞—Å—á–∏—Ç–∞—Ç—å SLP –≤ —Ä—É–±–ª—è—Ö
@dp.message_handler(Text(startswith=f'üí≤'), state=None)
async def slp_to_rub_take_number(message: Message):
    await message.answer(f'''–†–∞—Å—á–∏—Ç–∞—Ç—å {get_user_info(message.from_user.id)[0][5]}% SLP –≤ {get_user_info(message.from_user.id)[0][4]}
    
–í–≤–µ–¥–∏—Ç–µ –æ–±—â–µ–µ –∫–æ–ª-–≤–æ SLP:''')
    await state_slp_45_to_rub.Q1.set()

@dp.message_handler(state=state_slp_45_to_rub.Q1)
async def slp_to_rub_result(message: Message, state: FSMContext):
    answer = message.text
    if answer.isdigit(): # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ
        user_info = get_user_info(message.from_user.id)
        answer = int(answer) / 100 * int(user_info[0][5])
        slp_price = slp_take_price(f'{user_info[0][4]}')
        result = float(slp_price) * answer
        await message.answer(f'{int(answer)} SLP —Å–æ—Å—Ç–∞–≤–∏—Ç {int(result)} {get_user_info(message.from_user.id)[0][4]}')
        print(f'{message.from_user.full_name} —Å—á–∏—Ç–∞–µ—Ç {get_user_info(message.from_user.id)[0][5]}% SLP')
        await state.reset_state()
    else:
        await state_slp_45_to_rub.first()
        await message.answer(f'''–†–∞—Å—á–∏—Ç–∞—Ç—å {get_user_info(message.from_user.id)[0][5]}% SLP –≤ {get_user_info(message.from_user.id)[0][4]}
        
‚ùóÔ∏è –û—à–∏–±–∫–∞:  –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª-–≤–æ SLP''')

# –°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å:

@dp.message_handler(Text(startswith='‚ùî'), state=None)
async def take_number(message: Message):
    await message.answer('''–°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å

–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ SLP:''')
    await state_average_earnings.Q1.set()

@dp.message_handler(state=state_average_earnings.Q1)
async def show_result(message: Message, state: FSMContext):
    slp = message.text
    if slp.isdigit():
        await state.update_data(slp=slp)
        await state_average_earnings.next()
        await message.answer(f'''–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –¥–Ω–µ–π:''')
    else:
        await state_average_earnings.first()
        await message.answer('''–°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å

‚ùóÔ∏è –û—à–∏–±–∫–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª-–≤–æ SLP''')

@dp.message_handler(state=state_average_earnings.Q2)
async def show_result(message: Message, state: FSMContext):
    data = await state.get_data()
    slp = data['slp']
    day = message.text
    answer2 = message.text
    if answer2.isdigit():
        if int(answer2) > 0:
            average = int(slp) / int(day)
            await state.reset_state()
            await message.answer(f'–í —Å—Ä–µ–¥–Ω–µ–º –ø–æ {int(average)} SLP –≤ –¥–µ–Ω—å')
            print(f'{message.from_user.full_name} —Å—á–∏—Ç–∞–µ—Ç —Å—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫')
        else:
            await message.answer(f'''‚ùóÔ∏è –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª-–≤–æ –¥–Ω–µ–π''')
    else:
        await message.answer('''–°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å

‚ùóÔ∏è –û—à–∏–±–∫–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª-–≤–æ –¥–Ω–µ–π''')