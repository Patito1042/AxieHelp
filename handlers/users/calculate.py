from aiogram.types import Message
from aiogram.dispatcher.filters.builtin import CommandStart, Text
from loader import dp, bot
from states.calculate import *
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.dispatcher import FSMContext
from utils import slp_take_price, slp_price
from utils.calculator import *

menu = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)

slp_to_rub = KeyboardButton(text='üí≤ SLP –≤ —Ä—É–±–ª—è—Ö')
slp45_to_rub = KeyboardButton(text='üí≤ 45% SLP –≤ —Ä—É–±–ª—è—Ö')
average_earnings = KeyboardButton(text='‚ùî –°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å')
back = KeyboardButton(text='–í –º–µ–Ω—é ')

menu.add(slp_to_rub, slp45_to_rub)
menu.add(average_earnings)
menu.add(back)

#
@dp.message_handler(Text(startswith=f'–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä'), state=None)
async def take_number(message: Message):
    await message.answer('''–ß—Ç–æ –±—É–¥–µ–º –≤—ã—á–∏—Å–ª—è—Ç—å?''', reply_markup=menu)

@dp.message_handler(Text(startswith=f'{slp45_to_rub.text}'), state=None)
async def take_number(message: Message):
    await message.answer('''–†–∞—Å—á–∏—Ç–∞—Ç—å 45% SLP –≤ —Ä—É–±–ª—è—Ö

–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ SLP:''', reply_markup=menu)
    await state_slp_45_to_rub.Q1.set()


@dp.message_handler(state=state_slp_45_to_rub.Q1)
async def show_result(message: Message, state: FSMContext):
    answer = message.text
    if answer.isdigit():
        answer = int(answer) / 100 * 45
        slp_price = slp_take_price()
        result = float(slp_price) * answer
        await message.answer(f'{int(answer)} SLP —Å–æ—Å—Ç–∞–≤–∏—Ç {int(result)} —Ä—É–±–ª–µ–π')
        print(f'{message.from_user.full_name} —Å—á–∏—Ç–∞–µ—Ç 45% SLP')
        await state.reset_state()
    else:
        await state_slp_45_to_rub.first()
        await message.answer('''–†–∞—Å—á–∏—Ç–∞—Ç—å 45% SLP –≤ —Ä—É–±–ª—è—Ö
        
‚ùóÔ∏è –û—à–∏–±–∫–∞:  –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª-–≤–æ SLP''')

# –†–∞—Å—á–∏—Ç–∞—Ç—å 100% SLP –≤ —Ä—É–±–ª—è—Ö

@dp.message_handler(Text(startswith=f'{slp_to_rub.text}'), state=None)
async def take_number(message: Message):
    await message.answer('''–†–∞—Å—á–∏—Ç–∞—Ç—å SLP –≤ —Ä—É–±–ª—è—Ö

–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ SLP:''', reply_markup=menu)
    await state_slp_to_rub.Q1.set()


@dp.message_handler(state=state_slp_to_rub.Q1)
async def show_result(message: Message, state: FSMContext):
    answer = message.text
    if answer.isdigit():
        slp_price = slp_take_price()
        result = float(slp_price) * float(answer)
        await message.answer(f'{int(answer)} SLP —Å–æ—Å—Ç–∞–≤–∏—Ç {int(result)} —Ä—É–±–ª–µ–π')
        print(f'{message.from_user.full_name} —Å—á–∏—Ç–∞–µ—Ç SLP')
        await state.reset_state()
    else:
        await state_slp_to_rub.first()
        await message.answer('''–†–∞—Å—á–∏—Ç–∞—Ç—å SLP –≤ —Ä—É–±–ª—è—Ö

‚ùóÔ∏è –û—à–∏–±–∫–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª-–≤–æ SLP''')

# –°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å:

@dp.message_handler(Text(startswith=f'{average_earnings.text}'), state=None)
async def take_number(message: Message):
    await message.answer('''–°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å

–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ SLP:''', reply_markup=menu)
    await state_average_earnings.Q1.set()


@dp.message_handler(state=state_average_earnings.Q1)
async def show_result(message: Message, state: FSMContext):
    slp = message.text
    if slp.isdigit():
        await state.update_data(slp=slp)
        await state_average_earnings.next()
        await message.answer(f'''–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –¥–Ω–µ–π:''', reply_markup=menu)
    else:
        await state_average_earnings.first()
        await message.answer('''–°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å

‚ùóÔ∏è –û—à–∏–±–∫–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª-–≤–æ SLP''')

@dp.message_handler(state=state_average_earnings.Q2)
async def show_result(message: Message, state: FSMContext):
    data = await state.get_data()
    slp = data['slp']
    day = message.text
    answer2 = message.text
    if answer2.isdigit():
        average = int(slp) / int(day)
        await state.reset_state()
        await message.answer(f'–í —Å—Ä–µ–¥–Ω–µ–º –ø–æ {int(average)} SLP –≤ –¥–µ–Ω—å')
        print(f'{message.from_user.full_name} —Å—á–∏—Ç–∞–µ—Ç —Å—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫')
    else:
        await state_average_earnings.previous()
        await message.answer('''–°—Ä–µ–¥–Ω–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –¥–µ–Ω—å

‚ùóÔ∏è –û—à–∏–±–∫–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª-–≤–æ –¥–Ω–µ–π''')
